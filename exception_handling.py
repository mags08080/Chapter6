# -*- coding: utf-8 -*-
"""exception_handling

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zUZQ4nJZUSOHUi9F0-_YuiCWqC9dpVAP
"""

def get_values_from_file(filename):
    #Reads numbers from a file, handles IOError and ValueError exceptions
    values = []
    try:
        with open(filename, 'r') as file:
            for line in file:
                try:
                    # Convert each line to a float and append to the list
                    values.append(float(line.strip()))
                except ValueError:
                    print(f"Warning: Could not convert {line.strip()} to a number.")
    except IOError:
        print(f"Error: Could not open or read the file '{filename}'.")
    return values

def calculate_average(values):
    #Calculates and returns the average of the values
    if len(values) == 0:
        return None  # Handle the case of no valid data
    return sum(values) / len(values)

def print_average(average):
    #Prints the average, or an error message if no valid data
    if average is None:
        print("Error: No valid data to average.")
    else:
        print(f"The average is: {average:.2f}")

def main():
    #Main function that orchestrates reading, calculating, and printing
    filename = input("Enter the filename: ")
    values = get_values_from_file(filename)
    average = calculate_average(values)
    print_average(average)

if __name__ == "__main__":
    main()