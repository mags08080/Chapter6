# -*- coding: utf-8 -*-
"""files_and_exceptions

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11FYUl6ubSbLE-ezZ-mHBZg0X9YZiPOuX
"""

# read a file to add numbers: create a program that reads a file "numbers.txt"
# and converts the strings to integer before they are used in math operation. Later add the three
# numbers and display the numbers and their total

#open the file
infile = open("numbers.txt", "r")
#initialize the total
total = 0
#list for the numbers
numbers = []
#read the file
for line in infile:
    #convert the string to an integer
    number = int(line)
    #add the number to the total
    total += number
    #append the number to the list
    numbers.append(number)

#close the file
infile.close()
#display the numbers separated by a comma
print("The numbers are:",", ".join(str(number) for number in numbers))
#display the total
print("Their total is:", total)

#Create records in a file: gets employee data from user and saves it
#as records in the employees.txt file
#function
def create_records():
    #get the number of employee records to create
    num_emps = int(input("How many employee records do you want to create? "))
    #open a file in append mode
    emp_file = open('employees.txt', 'w')

    #get each employee's data and write it to the file
    for count in range(1, num_emps + 1):
      #get data
      print(f'Enter data for employee #{count}')
      name = input('Name: ')
      id_num = input('ID number: ')
      department = input('Department: ')

      #write data as a record to the file
      emp_file.write(f'{name}\n')
      emp_file.write(f'{id_num}\n')
      emp_file.write(f'{department}\n')

    print(f"\n{num_emps} employee records written to employees.txt")
if __name__ == "__main__":
    create_records()

#program to search for certain criteria in a file
def main():
  #create a boolean variable to use as a flag
  found = False

  #get the search value
  search = input("Enter a name to search for: ")

  #open the employees.txt file
  emp_file = open('employees.txt', 'r')

  #read the first record's description field
  descr = emp_file.readline()

  #while loop to read rest of the file
  while descr != '':
    #read the ID field
    id_num = emp_file.readline()

    #read the department field
    department = emp_file.readline()

    #strip the newlines from the fields
    descr = descr.rstrip('\n')

    #determine whether this record matches the search value
    if descr == search:

      #display the record
      print(f'Name: {descr}')
      print(f'ID: {id_num}')
      print(f'Department: {department}')

      #set the found flag to true
      found = True

    #read the next name
    descr = emp_file.readline()

  #close the file
  emp_file.close()

#call the main function
if __name__ == '__main__':
  main()